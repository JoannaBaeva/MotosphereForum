<!-- Styles -->
@section Styles {
    <link rel="stylesheet" href="~/css/forum.css">
}

@using MotorcycleForum.Data.Enums
@model ForumPostDetailsViewModel

@{
    ViewData["Title"] = Model.Title;
    var isUpvoted = Model.UserVoteType == VoteType.Upvote;
    var isDownvoted = Model.UserVoteType == VoteType.Downvote;
}

<div class="my-4 container-fluid px-3 px-md-4 px-lg-5">
    <a asp-action="Index" class="btn btn-outline-secondary mb-3 d-inline-flex align-items-center">
        <i class="bi bi-arrow-left me-2"></i> Back to Forum
    </a>

    <div class="card rounded-4 border-0 shadow-lg">
        <!-- Header -->
        <div class="card-header bg-dark text-white py-3 px-3 px-md-4 border-bottom border-danger rounded-top-4">
            <div class="d-flex justify-content-between align-items-center gap-3 flex-wrap">
                <h2 class="fw-bold mb-0">@Model.Title</h2>
                <div class="d-flex align-items-center">
                    <img src="@Model.CreatorProfilePictureUrl" 
                         class="rounded-circle me-3 border-danger border"
                         style="width: 48px; height: 48px; object-fit: cover;" alt="Author avatar" />
                    <div class="text-end">
                        <a href="/Profile/@Model.CreatorId" class="fw-semibold text-decoration-none text-light">
                            @Model.CreatorName
                        </a>
                        <small class="text-light d-block">
                            <i class="bi bi-calendar-event me-1"></i>@Model.CreatedDate.ToString("MMM dd, yyyy")
                        </small>
                    </div>
                </div>
            </div>
        </div>


        <!-- Body -->
        <div class="card-body bg-dark text-light px-3 px-md-4 py-4 bg-opacity-75">
            <p class="fs-5 lh-lg" style="white-space: pre-line;">@Model.Content</p>

            <!-- Image Carousel -->
            @if (Model.ImageUrls.Any())
            {
                <div class="mt-4 d-flex justify-content-center">
                    <div id="forumPostCarousel" class="carousel slide" style="max-width: 700px;" data-bs-ride="carousel">
                        <div class="carousel-inner rounded shadow-sm">
                            @for (int i = 0; i < Model.ImageUrls.Count; i++)
                            {
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <img src="@Model.ImageUrls[i]"
                                         class="d-block object-fit-cover zoomable"
                                         style="height: 320px; object-fit: cover; cursor: zoom-in; border-radius: 8px;"
                                         alt="Forum Image @(i + 1)" />
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#forumPostCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon bg-dark rounded-circle p-2 bg-opacity-50" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#forumPostCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon bg-dark rounded-circle p-2 bg-opacity-50" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                </div>
            }


            <!-- Admin Tools -->
            @if ((User.IsInRole("Moderator") || User.IsInRole("Admin")) && !Model.IsOwner)
            {
                <div class="d-flex justify-content-end gap-3 mt-4">
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="text-white-50" title="Delete Post">
                        <i class="bi bi-trash3 fs-5"></i>
                    </a>
                </div>
            }
            @if (Model.IsOwner)
            {
                <div class="d-flex justify-content-end gap-3 mt-4">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="text-white-50" title="Edit Post">
                        <i class="bi bi-pencil-square fs-5"></i>
                    </a>
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="text-white-50" title="Delete Post">
                        <i class="bi bi-trash3 fs-5"></i>
                    </a>
                </div>
            }
        </div>

        <!-- Footer / Voting -->
        <div class="card-footer bg-dark text-light px-3 py-3 border-top border-secondary">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-3">
                <div class="d-flex align-items-center gap-3">
                    <button id="upvote-btn"
                            class="btn btn-sm px-3 d-flex align-items-center gap-1 @(isUpvoted ? "btn-success text-white active" : "btn-outline-success")"
                            data-post-id="@Model.Id"
                            data-current-vote="@Model.UserVoteType.ToString().ToLower()">
                        <i class="bi bi-hand-thumbs-up"></i>
                    </button>
                    <span id="upvotes-count" class="badge bg-success">@Model.Upvotes</span>

                    <button id="downvote-btn"
                            class="btn btn-sm px-3 d-flex align-items-center gap-1 @(isDownvoted ? "btn-danger text-white active" : "btn-outline-danger")"
                            data-post-id="@Model.Id">
                        <i class="bi bi-hand-thumbs-down"></i>
                    </button>
                    <span id="downvotes-count" class="badge bg-danger">@Model.Downvotes</span>
                </div>

                <div class="text-md-end w-100 w-md-auto">
                    <button id="toggle-comments-btn" class="btn btn-outline-light btn-sm fw-bold w-100 w-md-auto mt-2 mt-md-0">
                        💬 Show Comments (@Model.Comments.Count)
                    </button>
                </div>
            </div>
        </div>

        <!-- Comments Section -->
        <div id="comments-section" class="bg-light p-4 rounded-bottom container" style="display: none;"
             data-post-id="@Model.Id" data-current-user-avatar="@ViewBag.CurrentUserAvatar">
            <h4 class="fw-bold border-bottom border-danger pb-2 mb-4 text-dark">Comments</h4>

            <div id="comments-list">
                @if (Model.Comments?.Any() ?? false)
                {
                    @foreach (var comment in Model.Comments)
                    {
                        <partial name="_CommentPartial" model="comment" />
                    }
                }
                else
                {
                    <p class="text-muted">No comments yet. Be the first to comment!</p>
                }
            </div>

            <form id="comment-form" class="mt-4" data-post-id="@Model.Id" data-current-user-avatar="@ViewBag.CurrentUserAvatar">
                @Html.AntiForgeryToken()
                <div class="mb-3">
                    <label for="comment-content" class="form-label text-dark fw-bold">Your Comment</label>
                    <textarea class="form-control" id="comment-content" rows="3" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary"><i class="bi bi-chat-right-dots"></i> Add Comment</button>
            </form>
        </div>
    </div>
</div>

<div id="imageZoomModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content bg-dark rounded-3 border-0">
            <div class="modal-body p-0">
                <img id="zoomedImage" src="" class="img-fluid w-100 rounded-3" style="object-fit: contain; max-height: 90vh;" />
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="isAuthenticated" value="@User.Identity.IsAuthenticated.ToString().ToLower()" />

<!-- JavaScript -->
@section Scripts {
    <script src="~/js/Forum/forum-voting.js"></script>
    <script src="~/js/Forum/forum-comments.js"></script>
    <script src="~/js/Forum/post-image-view.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const isAuthenticated = document.getElementById('isAuthenticated')?.value === "true";

            // Voting buttons
            const upvoteBtn = document.getElementById("upvote-btn");
            const downvoteBtn = document.getElementById("downvote-btn");

            if (upvoteBtn) {
                upvoteBtn.addEventListener("click", function (e) {
                    if (!isAuthenticated) {
                        e.preventDefault();
                        showLoginReminder();
                    }
                });
            }

            if (downvoteBtn) {
                downvoteBtn.addEventListener("click", function (e) {
                    if (!isAuthenticated) {
                        e.preventDefault();
                        showLoginReminder();
                    }
                });
            }

            // Comment form
            const commentForm = document.getElementById("comment-form");

            if (commentForm) {
                commentForm.addEventListener("submit", function (e) {
                    if (!isAuthenticated) {
                        e.preventDefault();
                        showLoginReminder();
                    }
                });
            }

            // Reply forms (could be multiple reply forms!)
            const replyForms = document.querySelectorAll(".reply-form");

            replyForms.forEach(form => {
                form.addEventListener("submit", function (e) {
                    if (!isAuthenticated) {
                        e.preventDefault();
                        showLoginReminder();
                    }
                });
            });
        });

        function showLoginReminder() {
            Swal.fire({
                title: 'Login Required',
                text: 'Please log in to interact with posts.',
                icon: 'warning',
                confirmButtonText: 'Log In',
                confirmButtonColor: '#d81324',
                background: '#fff',
                backdrop: 'rgba(0,0,0,0.6)',
                customClass: {
                    popup: 'rounded-4 shadow-lg'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/Identity/Account/Login';
                }
            });
        }
    </script>
}




