@model MarketplaceListingViewModel

<div class="container py-5">
    <div class="bg-white rounded shadow p-4">
        <h2 class="text-dark fw-bold mb-4 border-bottom pb-2">✨ Create New Listing</h2>

        <form asp-controller="Marketplace" asp-action="Create" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="All" class="text-danger mb-3"></div>

            <div class="row g-3">
                <div class="col-md-6">
                    <label asp-for="Title" class="form-label fw-semibold text-dark">Title</label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="Price" class="form-label fw-semibold text-dark">Price</label>
                    <input asp-for="Price" class="form-control" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="Location" class="form-label fw-semibold text-dark">Location</label>
                    <input asp-for="Location" class="form-control" />
                    <span asp-validation-for="Location" class="text-danger"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="CategoryId" class="form-label fw-semibold text-dark">Category</label>
                    <select asp-for="CategoryId" class="form-select" asp-items="Model.Categories">
                        <option value="">-- Select Category --</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>

                <div class="col-12">
                    <label asp-for="Description" class="form-label fw-semibold text-dark">Description</label>
                    <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="PhoneNumber" class="form-label fw-semibold text-dark">Phone Number (optional)</label>
                    <input asp-for="PhoneNumber" class="form-control" placeholder="e.g. +359123456789" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
            </div>

            <hr class="my-4" />

            <div class="form-group mb-4">
                <label class="form-label fw-semibold text-dark">Upload Images</label>

                <div id="dropZone" class="border border-dashed p-4 text-center bg-light rounded mb-3">
                    <p><i class="bi bi-cloud-arrow-up fs-2 text-muted"></i></p>
                    <p class="mb-1 text-muted">Drag and drop images here, or click to select</p>
                    <input id="imageInput" asp-for="ImageFiles" type="file" class="form-control d-none" multiple accept="image/*" />
                    <button type="button" id="uploadTrigger" class="btn btn-outline-dark mt-2">Select Files</button>
                </div>
                <span asp-validation-for="ImageFiles" class="text-danger d-block mt-2"></span>
                <div id="previewContainer" class="row"></div>
            </div>

            <div class="text-end mt-4">
                <button type="submit" class="btn fw-bold" style="background-color: #d81324; color: white;">
                    <i class="bi bi-plus-circle"></i> Create Listing
                </button>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/browser-image-compression@2.0.2/dist/browser-image-compression.js"></script>

    <script>
        const dropZone = document.getElementById('dropZone');
        const imageInput = document.getElementById('imageInput');
        const previewContainer = document.getElementById('previewContainer');
        const uploadTrigger = document.getElementById('uploadTrigger');

        let fileList = [];

        uploadTrigger.onclick = () => imageInput.click();

        dropZone.addEventListener('dragover', e => {
            e.preventDefault();
            dropZone.classList.add('bg-secondary', 'text-white');
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('bg-secondary', 'text-white');
        });

        dropZone.addEventListener('drop', async (e) => {
            e.preventDefault();
            dropZone.classList.remove('bg-secondary', 'text-white');
            await handleFiles(e.dataTransfer.files);
        });

        imageInput.addEventListener('change', async () => {
            await handleFiles(imageInput.files);
        });

        async function handleFiles(files) {
            for (let i = 0; i < files.length; i++) {
                const compressed = await imageCompression(files[i], {
                    maxSizeMB: 1,
                    maxWidthOrHeight: 1024,
                    useWebWorker: true
                });

                fileList.push(compressed);
                addPreview(compressed);
            }

            updateInputFileList();
        }

        function addPreview(file) {
            const reader = new FileReader();

            reader.onload = function (e) {
                const col = document.createElement('div');
                col.className = 'col-md-3 mb-3 position-relative animate__animated animate__fadeInUp';

                const img = document.createElement('img');
                img.src = e.target.result;
                img.className = 'img-fluid rounded';

                const removeBtn = document.createElement('button');
                removeBtn.type = 'button';
                removeBtn.className = 'btn btn-sm btn-danger position-absolute';
                removeBtn.style.top = '5px';
                removeBtn.style.right = '5px';
                removeBtn.innerHTML = '<i class="bi bi-x-lg"></i>';

                removeBtn.onclick = () => {
                    const index = Array.from(previewContainer.children).indexOf(col);
                    fileList.splice(index, 1);
                    col.remove();
                    updateInputFileList();
                };

                col.appendChild(img);
                col.appendChild(removeBtn);
                previewContainer.appendChild(col);
            };

            reader.readAsDataURL(file);
        }

        function updateInputFileList() {
            const dataTransfer = new DataTransfer();
            fileList.forEach(file => dataTransfer.items.add(file));
            imageInput.files = dataTransfer.files;
        }

        // Optional: Make previews sortable
        new Sortable(previewContainer, {
            animation: 150,
            onEnd: () => {
                const newOrder = Array.from(previewContainer.children);
                fileList = newOrder.map(div => {
                    const index = Array.from(previewContainer.children).indexOf(div);
                    return imageInput.files[index];
                });
                updateInputFileList();
            }
        });

                document.querySelector('form').addEventListener('submit', function (e) {
            if (imageInput.files.length === 0) {
                e.preventDefault();

                const validationMessage = document.createElement('span');
                validationMessage.className = 'text-danger d-block mt-2';
                validationMessage.textContent = 'Please upload at least one image.';

                const existing = document.querySelector('[data-image-required]');
                if (!existing) {
                    imageInput.parentElement.appendChild(validationMessage);
                    validationMessage.setAttribute('data-image-required', true);
                }
            }
        });
    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}
